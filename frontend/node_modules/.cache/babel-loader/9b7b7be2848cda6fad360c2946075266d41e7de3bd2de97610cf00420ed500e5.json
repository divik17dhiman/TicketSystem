{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Divik\\\\Downloads\\\\ticketsupportsystem\\\\frontend\\\\src\\\\components\\\\ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ApiService from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUpload = ({\n  onImagesUploaded,\n  multiple = false,\n  existingImages = []\n}) => {\n  _s();\n  const [uploading, setUploading] = useState(false);\n  const [uploadedImages, setUploadedImages] = useState(existingImages);\n  const handleFileChange = async e => {\n    const files = Array.from(e.target.files);\n    if (files.length === 0) return;\n    setUploading(true);\n    try {\n      let uploadedData;\n      if (multiple && files.length > 1) {\n        uploadedData = await ApiService.uploadImages(files);\n      } else {\n        uploadedData = await ApiService.uploadImage(files[0]);\n        uploadedData = [uploadedData]; // Normalize to array\n      }\n      const newImages = [...uploadedImages, ...uploadedData];\n      setUploadedImages(newImages);\n      onImagesUploaded(newImages);\n    } catch (error) {\n      console.error('Upload failed:', error);\n      alert('Failed to upload image(s): ' + error.message);\n    } finally {\n      setUploading(false);\n    }\n  };\n  const removeImage = index => {\n    const newImages = uploadedImages.filter((_, i) => i !== index);\n    setUploadedImages(newImages);\n    onImagesUploaded(newImages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-upload\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [multiple ? 'Upload Images (max 5)' : 'Upload Image', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          multiple: multiple,\n          onChange: handleFileChange,\n          disabled: uploading,\n          style: {\n            marginTop: '0.5rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), uploading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Uploading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), uploadedImages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploaded-images\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Uploaded Images:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fill, minmax(150px, 1fr))',\n          gap: '1rem'\n        },\n        children: uploadedImages.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5000${image.url}`,\n            alt: image.originalName,\n            style: {\n              width: '100%',\n              height: '100px',\n              objectFit: 'cover',\n              borderRadius: '4px',\n              border: '1px solid #ddd'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeImage(index),\n            style: {\n              position: 'absolute',\n              top: '5px',\n              right: '5px',\n              background: '#e74c3c',\n              color: 'white',\n              border: 'none',\n              borderRadius: '50%',\n              width: '20px',\n              height: '20px',\n              cursor: 'pointer',\n              fontSize: '12px'\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '0.8rem',\n              margin: '0.25rem 0',\n              wordBreak: 'break-word'\n            },\n            children: image.originalName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"BPLlg+c5CFb5n6fRqBnwUqUJw4g=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","ApiService","jsxDEV","_jsxDEV","ImageUpload","onImagesUploaded","multiple","existingImages","_s","uploading","setUploading","uploadedImages","setUploadedImages","handleFileChange","e","files","Array","from","target","length","uploadedData","uploadImages","uploadImage","newImages","error","console","alert","message","removeImage","index","filter","_","i","className","children","type","accept","onChange","disabled","style","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","map","image","position","src","url","alt","originalName","width","height","objectFit","borderRadius","border","onClick","top","right","background","color","cursor","fontSize","margin","wordBreak","_c","$RefreshReg$"],"sources":["C:/Users/Divik/Downloads/ticketsupportsystem/frontend/src/components/ImageUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ApiService from '../services/api';\r\n\r\nconst ImageUpload = ({ onImagesUploaded, multiple = false, existingImages = [] }) => {\r\n  const [uploading, setUploading] = useState(false);\r\n  const [uploadedImages, setUploadedImages] = useState(existingImages);\r\n\r\n  const handleFileChange = async (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n\r\n    setUploading(true);\r\n    try {\r\n      let uploadedData;\r\n      if (multiple && files.length > 1) {\r\n        uploadedData = await ApiService.uploadImages(files);\r\n      } else {\r\n        uploadedData = await ApiService.uploadImage(files[0]);\r\n        uploadedData = [uploadedData]; // Normalize to array\r\n      }\r\n\r\n      const newImages = [...uploadedImages, ...uploadedData];\r\n      setUploadedImages(newImages);\r\n      onImagesUploaded(newImages);\r\n    } catch (error) {\r\n      console.error('Upload failed:', error);\r\n      alert('Failed to upload image(s): ' + error.message);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const removeImage = (index) => {\r\n    const newImages = uploadedImages.filter((_, i) => i !== index);\r\n    setUploadedImages(newImages);\r\n    onImagesUploaded(newImages);\r\n  };\r\n\r\n  return (\r\n    <div className=\"image-upload\">\r\n      <div className=\"form-group\">\r\n        <label>\r\n          {multiple ? 'Upload Images (max 5)' : 'Upload Image'}\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            multiple={multiple}\r\n            onChange={handleFileChange}\r\n            disabled={uploading}\r\n            style={{ marginTop: '0.5rem' }}\r\n          />\r\n        </label>\r\n        {uploading && <p>Uploading...</p>}\r\n      </div>\r\n\r\n      {uploadedImages.length > 0 && (\r\n        <div className=\"uploaded-images\">\r\n          <h4>Uploaded Images:</h4>\r\n          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(150px, 1fr))', gap: '1rem' }}>\r\n            {uploadedImages.map((image, index) => (\r\n              <div key={index} style={{ position: 'relative' }}>\r\n                <img\r\n                  src={`http://localhost:5000${image.url}`}\r\n                  alt={image.originalName}\r\n                  style={{\r\n                    width: '100%',\r\n                    height: '100px',\r\n                    objectFit: 'cover',\r\n                    borderRadius: '4px',\r\n                    border: '1px solid #ddd'\r\n                  }}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => removeImage(index)}\r\n                  style={{\r\n                    position: 'absolute',\r\n                    top: '5px',\r\n                    right: '5px',\r\n                    background: '#e74c3c',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '50%',\r\n                    width: '20px',\r\n                    height: '20px',\r\n                    cursor: 'pointer',\r\n                    fontSize: '12px'\r\n                  }}\r\n                >\r\n                  Ã—\r\n                </button>\r\n                <p style={{ fontSize: '0.8rem', margin: '0.25rem 0', wordBreak: 'break-word' }}>\r\n                  {image.originalName}\r\n                </p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}